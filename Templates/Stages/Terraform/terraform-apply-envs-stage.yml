parameters:
  - name: destroy
    type: boolean
    default: false
  - name: environments
    type: object
    default:
      - name: envName
        default: envName
      - name: dependsOn
        default: []
      - name: backendAzureRmResourceGroupName
        default: backendAzureRmResourceGroupName
      - name: backendAzureRmStorageAccountName
        default: backendAzureRmStorageAccountName
      - name: tfVarsFile
        default: 'tfVarsFile'
  - name: infrastructureGroups
    type: object
    default:
      infrastructureName: 'infrastructureName'
      dependsOn: []
      deployOn: []
      workingDirectory: 'workingDirectory'
      backendAzureRmContainerName: 'backendAzureRmContainerName'

stages:
  - ${{ each env in parameters.environments}}:
    - stage: ${{ env.envName }}
      dependsOn: ${{ env.dependsOn }}
      ${{ if env.dependsOn }}:
        condition: succeeded('${{ env.dependsOn }}')
      jobs: 
      - ${{ if parameters.destroy }}:  
        - ${{ each infra in parameters.infrastructureGroups }}:
          - ${{ if or(not(infra.deployOn), containsValue(infra.deployOn, env.envName)) }}:  
            - template: ../../Jobs/Terraform/terraform-destroy-job.yml
              parameters:
                name: ${{ infra.infrastructureName }}
                workingDirectory: ${{ infra.workingDirectory }}
                backendAzureRmResourceGroupName: ${{ env.backendAzureRmResourceGroupName }}
                backendAzureRmStorageAccountName: ${{ env.backendAzureRmStorageAccountName }}
                backendAzureRmContainerName: ${{ infra.backendAzureRmContainerName }}
                planCommandOptions: '-var-file="EnvironmentVariables/${{ env.tfVarsFile }}"'
      - ${{ else }}:      
        - ${{ each infra in parameters.infrastructureGroups }}:
          - ${{ if or(not(infra.deployOn), containsValue(infra.deployOn, env.envName)) }}:  
            - template: ../../Jobs/Terraform/terraform-apply-job.yml
              parameters:
                name: ${{ infra.infrastructureName }}
                workingDirectory: ${{ infra.workingDirectory }}
                backendAzureRmResourceGroupName: ${{ env.backendAzureRmResourceGroupName }}
                backendAzureRmStorageAccountName: ${{ env.backendAzureRmStorageAccountName }}
                backendAzureRmContainerName: ${{ infra.backendAzureRmContainerName }}
                planCommandOptions: '-var-file="EnvironmentVariables/${{ env.tfVarsFile }}"'        
