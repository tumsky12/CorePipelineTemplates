parameters:
  - name: destroy
    type: boolean
    default: false
  - name: environments
    type: object
    default:
      envName: 'name'
      dependsOn: []
      backendAzureRmResourceGroupName: 'backendAzureRmResourceGroupName'
      backendAzureRmStorageAccountName: 'backendAzureRmStorageAccountName'
      - name: infrastructure
        type: object
        default:
          infrastructureName: 'infrastructureName'
          dependsOn: []
          workingDirectory: 'workingDirectory'
          backendAzureRmContainerName: 'backendAzureRmContainerName'
          tfVarsFile: 'tfVarsFile'

stages:
  - ${{ each env in parameters.environments}}:
    - stage: ${{ env.envName }}
      dependsOn: ${{ env.dependsOn }}
      ${{ if env.dependsOn }}:
        condition: succeeded('${{ env.dependsOn }}')
      jobs: 
      - ${{ if parameters.destroy }}:  
        - ${{ each infra in env.infrastructure }}:
          - template: ../../Jobs/Terraform/terraform-destroy-job.yml
            parameters:
              name: ${{ infra.infrastructureName }}
              workingDirectory: ${{ infra.workingDirectory }}
              backendAzureRmResourceGroupName: ${{ env.backendAzureRmResourceGroupName }}
              backendAzureRmStorageAccountName: ${{ env.backendAzureRmStorageAccountName }}
              backendAzureRmContainerName: ${{ infra.backendAzureRmContainerName }}
              planCommandOptions: '-var-file="EnvironmentVariables/${{ infra.tfVarsFile }}"'
      - ${{ else }}:      
        - ${{ each infra in env.infrastructure }}:
          - template: ../../Jobs/Terraform/terraform-apply-job.yml
            parameters:
              name: ${{ infra.infrastructureName }}
              workingDirectory: ${{ infra.workingDirectory }}
              backendAzureRmResourceGroupName: ${{ env.backendAzureRmResourceGroupName }}
              backendAzureRmStorageAccountName: ${{ env.backendAzureRmStorageAccountName }}
              backendAzureRmContainerName: ${{ infra.backendAzureRmContainerName }}
              planCommandOptions: '-var-file="EnvironmentVariables/${{ infra.tfVarsFile }}"'        
